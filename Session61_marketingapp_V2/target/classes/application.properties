#Database Connection
spring.datasource.url=jdbc:mysql://localhost:3306/marketingapp_db
spring.datasource.username=root
spring.datasource.password=832401


#This line helps o create table in database using entity class.
#It makes hibernate to create a table when project is started.
#spring.jpa.hibernate.ddl-auto=create

#[NOTE: After running on "create" do not forget to change it to "update".Otherwise on every server restart the table be deoopped off.] 
spring.jpa.hibernate.ddl-auto=update


#SQL Queary to be seen in console 
spring.jpa.show-sql=true


#Hibernate Dialect:- 
#1.Hibernate Dialect helps us to specify what kind of sql querise need to be generated depending of database.
#2.A hibernate dialect gives information to the framework of how to convert hibernate queries(HQL) into native SQL queries.
#e.g: Hibernate: insert into leads (email, first_name, last_name, mobile) values (?, ?, ?, ?)
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect


#Suffix and Prefix:-
#It applies a prefix and a suffix to the view name and then looks for a physical resource with that path in the servlet context.
#It can be overridden by providing a bean of the same type.
#Path of the jsp file and its extension
spring.mvc.view.suffix=.jsp
spring.mvc.view.prefix=/WEB-INF/jsps/


#Setting up Application.properties file with configurations required for using Gmail SMTP server.
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=testing.javaconnect@gmail.com
spring.mail.password=jtixhntceobmgyka
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true



